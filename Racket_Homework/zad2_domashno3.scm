(define (accumulate op initial-value f a next b)
  (if (or (> a b) (= a b)) (op (f b) initial-value)
      (op (f a) (accumulate op initial-value f (next a) next b)))) 
(define (f a)
  a)
(define  (next a)
  (+ a 1))
(define (fact b)
  (accumulate * 1 (lambda (a) a) 1 (lambda (a) (+ a 1)) b))
